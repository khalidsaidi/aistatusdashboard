#!/usr/bin/env node

/**
 * Environment Setup Script
 * Helps configure distinct development and production environments
 */

const fs = require('fs');
const path = require('path');




// Check command line arguments
const args = process.argv.slice(2);
const environment = args[0]?.toLowerCase();

if (!environment || !['dev', 'development', 'prod', 'production'].includes(environment)) {
  
  
  
  
  process.exit(1);
}

const isDev = ['dev', 'development'].includes(environment);
const envType = isDev ? 'development' : 'production';



// Environment-specific configurations
const configs = {
  development: {
    APP_ENVIRONMENT: 'development',
    NODE_ENV: 'development',
    NEXT_PUBLIC_SITE_URL: 'http://localhost:3000',
    NEXT_PUBLIC_API_BASE_URL: 'https://us-central1-ai-status-dashboard-dev.cloudfunctions.net',
    FIREBASE_PROJECT_ID: 'ai-status-dashboard-dev',
    NEXT_PUBLIC_FIREBASE_PROJECT_ID: 'ai-status-dashboard-dev',
    NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: 'ai-status-dashboard-dev.firebaseapp.com',
    NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: 'ai-status-dashboard-dev.firebasestorage.app',
    RATE_LIMIT_MAX_REQUESTS: '100',
    envFile: '.env.local',
    description: 'Development environment with dev Firebase project'
  },
  production: {
    APP_ENVIRONMENT: 'production',
    NODE_ENV: 'production',
    NEXT_PUBLIC_SITE_URL: 'https://aistatusdashboard.com',
    NEXT_PUBLIC_API_BASE_URL: 'https://us-central1-ai-status-dashboard.cloudfunctions.net',
    FIREBASE_PROJECT_ID: 'ai-status-dashboard',
    NEXT_PUBLIC_FIREBASE_PROJECT_ID: 'ai-status-dashboard',
    NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: 'ai-status-dashboard.firebaseapp.com',
    NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: 'ai-status-dashboard.firebasestorage.app',
    RATE_LIMIT_MAX_REQUESTS: '60',
    FORCE_HTTPS: 'true',
    SECURE_COOKIES: 'true',
    envFile: '.env.production',
    description: 'Production environment with production Firebase project'
  }
};

const config = configs[envType];

// Create environment file content
const envContent = `# AI Status Dashboard - ${envType.toUpperCase()} Environment
# Auto-generated by setup-environment.js on ${new Date().toISOString()}

# === ENVIRONMENT CONFIGURATION ===
APP_ENVIRONMENT=${config.APP_ENVIRONMENT}
NODE_ENV=${config.NODE_ENV}

# === SITE CONFIGURATION ===
NEXT_PUBLIC_SITE_URL=${config.NEXT_PUBLIC_SITE_URL}

# === API CONFIGURATION ===
NEXT_PUBLIC_API_BASE_URL=${config.NEXT_PUBLIC_API_BASE_URL}

# === EMAIL CONFIGURATION ===
# Gmail SMTP Configuration
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=status@aistatusdashboard.com
SMTP_PASSWORD=your-${envType}-app-password
DEFAULT_FROM=noreply@aistatusdashboard.com
DEFAULT_REPLY_TO=support@aistatusdashboard.com

# === FIREBASE CONFIGURATION ===
FIREBASE_PROJECT_ID=${config.FIREBASE_PROJECT_ID}
FIREBASE_PRIVATE_KEY_ID=your-${envType}-private-key-id
FIREBASE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\\nyour-${envType}-private-key\\n-----END PRIVATE KEY-----\\n"
FIREBASE_CLIENT_EMAIL=firebase-adminsdk-xxxxx@${config.FIREBASE_PROJECT_ID}.iam.gserviceaccount.com
FIREBASE_CLIENT_ID=your-${envType}-client-id
FIREBASE_AUTH_URI=https://accounts.google.com/o/oauth2/auth
FIREBASE_TOKEN_URI=https://oauth2.googleapis.com/token

# === FIREBASE WEB CONFIG ===
NEXT_PUBLIC_FIREBASE_API_KEY=your-${envType}-firebase-api-key
NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${config.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN}
NEXT_PUBLIC_FIREBASE_PROJECT_ID=${config.NEXT_PUBLIC_FIREBASE_PROJECT_ID}
NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${config.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET}
NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=your-${envType}-sender-id
NEXT_PUBLIC_FIREBASE_APP_ID=your-${envType}-app-id
NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=your-${envType}-measurement-id

# === FIREBASE CLOUD MESSAGING ===
FCM_SERVER_KEY=your-${envType}-fcm-server-key
FCM_SENDER_ID=your-${envType}-sender-id
NEXT_PUBLIC_FCM_VAPID_KEY=your-${envType}-vapid-public-key
FCM_VAPID_PRIVATE_KEY=your-${envType}-vapid-private-key

# === WEBHOOK CONFIGURATION ===
WEBHOOK_SECRET=your-${envType}-webhook-secret

# === RATE LIMITING ===
RATE_LIMIT_MAX_REQUESTS=${config.RATE_LIMIT_MAX_REQUESTS}
RATE_LIMIT_WINDOW_MS=60000

# === MONITORING ===
ENABLE_REAL_MONITORING=true
ENABLE_REAL_NOTIFICATIONS=true
ENABLE_REAL_EMAIL_SENDING=true

# === PROVIDER DISCOVERY ===
DISCOVERY_EMAIL_RECIPIENT=admin@aistatusdashboard.com
DISCOVERY_NOTIFICATION_WEBHOOK=https://hooks.slack.com/services/your/slack/webhook

# === EXTERNAL SERVICES ===
SENDGRID_API_KEY=your-${envType}-sendgrid-api-key
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/your/webhook
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your/slack/webhook

# === ANALYTICS ===
NEXT_PUBLIC_GA_MEASUREMENT_ID=G-HPNE6D3YQW
`;

// Add production-specific security settings
if (envType === 'production') {
  envContent += `
# === SECURITY ===
FORCE_HTTPS=${config.FORCE_HTTPS}
SECURE_COOKIES=${config.SECURE_COOKIES}
`;
}

// Write environment file
try {
  fs.writeFileSync(config.envFile, envContent);
  
  
} catch (error) {
  
  process.exit(1);
}

// Set Firebase project

try {
  const { execSync } = require('child_process');
  execSync(`firebase use ${isDev ? 'dev' : 'prod'}`, { stdio: 'inherit' });
  
} catch (error) {
  
  
}

// Provide next steps



if (isDev) {
  
  
  
  
  
  
  
  
  
  
  
  
  
  
} else {
  
  
  
  
  
  
  
  
  
  
  
  
  
  
}





if (envType === 'development') {
  
} else {
  
} 