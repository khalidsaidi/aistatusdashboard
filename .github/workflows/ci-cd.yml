name: CI/CD Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting
        run: npm run lint
        
      - name: Run unit tests
        run: npm run test:coverage
        
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        
      - name: Run e2e tests
        run: npm run test:e2e
        
      - name: Build application
        run: npm run build
        
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          fail_ci_if_error: false
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: .next/
          retention-days: 1
          
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: .next/
          
      - name: Deploy to hosting service
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        run: |
          echo "ðŸš€ Deploying to production..."
          
          # Install Firebase CLI
          npm install -g firebase-tools
          
          # Build functions
          cd functions && npm run build && cd ..
          
          # Build Next.js app
          npm run build
          
          # Deploy to Firebase
          firebase deploy --only hosting,functions --project $FIREBASE_PROJECT_ID --token $FIREBASE_TOKEN
          
          echo "âœ… Deployment complete!"
          
      - name: Notify deployment status
        if: always()
        uses: 8398a7/action-slack@v3
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        with:
          status: ${{ job.status }}
          text: 'Deployment to production ${{ job.status }}'
        continue-on-error: true 